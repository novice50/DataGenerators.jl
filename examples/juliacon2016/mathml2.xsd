<?xml version="1.0" encoding="UTF-8"?>

<!-- SMP -->
<!-- SMP for demo purposes: xs:ID change to xs:string to avoid warning message -->
<!-- SMP bug fix in XSD: reference to mi.attlist corrected to mn.attlist for mn -->
<!-- SMP Variant 04 - Added domain knowledge: 
	- mathcolor/background should take valid RGB colour names or hex
	- fontfamily should take valid font names
	- table rowspacing columnspacing to be length-with-unit
	- table width columnwidth to be length-with-unit or auto
(on top of Variant 03) -->
<!-- SMP Variant 03 - Fixed probably bugs in length-with-unit and length-with-optional-unit types: * qualifier was applied to last part of number rather than the optional whitespace between the number and unit (on top of Variant 02) -->
<!-- SMP Variant 02 - Comments out element and attributes not covered at least once in W3 tests (on top of Variant 01) -->
<!-- SMP Variant 01 - Combines MathML2 schemas into a single file, and removes structure relating only to MathML content (i.e. not MathML presentation) -->
<!-- SMP -->

<xs:schema 
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.w3.org/1998/Math/MathML"
  targetNamespace="http://www.w3.org/1998/Math/MathML"
  elementFormDefault="qualified"
 >
<xs:annotation>
  <xs:documentation>
  This is an XML Schema for MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- SMP From mathml2.xsd -->

<!-- common stuff -->

<!-- SMP <xs:include schemaLocation="common/math.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is an XML Schema module defining the "math" element of MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- The four groups that govern a lot of things -->

<!-- currently very lax. Should be tightened from Chapter 5 -->

<xs:group name="Presentation-expr.class">
  <xs:choice>
    <xs:group ref="PresExpr.class"/>
<!-- SMP    <xs:group ref="ContExpr.class"/> -->
  </xs:choice>
</xs:group>

<!-- SMP
<xs:group name="Content-expr.class">
  <xs:choice>
    <xs:group ref="ContExpr.class"/>
    <xs:group ref="PresExpr.class"/>
  </xs:choice>
</xs:group>
-->

<xs:group name="PresExpr.class">
  <xs:choice>
    <xs:group ref="Presentation-token.class"/>
    <xs:group ref="Presentation-layout.class"/>
    <xs:group ref="Presentation-script.class"/>
    <xs:group ref="Presentation-table.class"/>
    <xs:element ref="mspace"/>
    <xs:element ref="maction"/>
<!-- SMP TEST    <xs:element ref="merror"/> -->
    <xs:element ref="mstyle"/>
  </xs:choice>
</xs:group>

<!-- SMP
<xs:group name="ContExpr.class">
  <xs:choice>
    <xs:group ref="Content-tokens.class"/>
    <xs:group ref="Content-arith.class"/>
    <xs:group ref="Content-functions.class"/>
    <xs:group ref="Content-logic.class"/>
    <xs:group ref="Content-constants.class"/>
    <xs:group ref="Content-sets.class"/>
    <xs:group ref="Content-relations.class"/>
    <xs:group ref="Content-elementary-functions.class"/>
    <xs:group ref="Content-calculus.class"/>
    <xs:group ref="Content-linear-algebra.class"/>
    <xs:group ref="Content-vector-calculus.class"/>
    <xs:group ref="Content-statistics.class"/>
    <xs:group ref="Content-constructs.class"/>
    <xs:element ref="semantics"/>
  </xs:choice>
</xs:group>
-->

<!-- "math" -->

<!-- SMP TEST
<xs:attributeGroup name="Browser-interface.attrib">
  <xs:attribute name="baseline" type="xs:string"/>
  <xs:attribute name="overflow" default="scroll">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="scroll"/>
        <xs:enumeration value="elide"/>
        <xs:enumeration value="truncate"/>
        <xs:enumeration value="scale"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="altimg" type="xs:anyURI"/>
  <xs:attribute name="alttext" type="xs:string"/>
  <xs:attribute name="type" type="xs:string"/>
  <xs:attribute name="name" type="xs:string"/>
  <xs:attribute name="height" type="xs:string"/>
  <xs:attribute name="width" type="xs:string"/>
</xs:attributeGroup>
-->

<xs:attributeGroup name="math.attlist">
<!-- SMP TEST  <xs:attributeGroup ref="Browser-interface.attrib"/> -->
<!-- SMP TEST  <xs:attribute name="macros" type="xs:string"/> -->
  <xs:attribute name="mode" type="xs:string"/> <!-- SMP TEST -->
  <xs:attribute name="display" default="inline"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="block"/>
        <xs:enumeration value="inline"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="math.content">
  <xs:choice>
    <xs:group ref="PresExpr.class"/>
<!-- SMP   <xs:group ref="ContExpr.class"/> -->
  </xs:choice>
</xs:group>

<xs:complexType name="math.type">
  <xs:group ref="math.content" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="math.attlist"/>
</xs:complexType>

<xs:element name="math" type="math.type"/> <!-- SMP TEST -->


<!-- SMP <xs:include schemaLocation="common/common-attribs.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the common attributes module for MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>


<!-- SMP
<xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink-href.xsd"/>
<xs:import/>
-->

<!-- The type of "class" is from the XHTML modularization with Schema document -->
<xs:attributeGroup name="Common.attrib">
  <xs:attribute name="class" type="xs:NMTOKENS"/> <!-- SMP TEST -->
<!-- SMP TEST  <xs:attribute name="style" type="xs:string"/> -->
<!-- SMP TEST  <xs:attribute name="xref" type="xs:IDREF"/> -->
  <xs:attribute name="id" type="xs:string"/> <!-- SMP TEST -->
  
  <!-- <xs:attribute ref="xlink:href"/> -->
  <!-- SMP from xlinf-href.xsd
<documentation xml:lang="en">
This schema provides the XLink href attribute for use in the MathML2 schema. Written by Max Froumentin, W3C.
</documentation>
</annotation>
  -->
<!-- SMP TEST  <xs:attribute name="href" type="xs:anyURI"/> -->
<!-- allow attributes from foreign namespaces, and don't check them -->
<!-- SMP TEST DEBATABLE <xs:anyAttribute namespace="##other" processContents="skip"/> -->
</xs:attributeGroup>


<!-- Presentation -->


<!-- SMP <xs:include schemaLocation="presentation/common-types.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is an XML Schema module containing some type definitions for MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- Simple sizes -->

<xs:simpleType name="simple-size">
  <xs:restriction base="xs:string">
    <xs:enumeration value="small"/>
    <xs:enumeration value="normal"/>
    <xs:enumeration value="big"/>
  </xs:restriction>
</xs:simpleType>

<!-- Centering values -->

<!-- SMP TEST DEBATABLE
<xs:simpleType name="centering">
  <xs:restriction base="xs:string">
    <xs:enumeration value="left"/>
    <xs:enumeration value="center"/>
    <xs:enumeration value="right"/>
  </xs:restriction>
</xs:simpleType>
-->

<!-- The named spaces -->

<!-- this is also used in the value of the "width" attribute on the "mpadded" element -->
<xs:simpleType name="named-space">
   <xs:restriction base="xs:string">
     <xs:enumeration value="veryverythinmathspace"/>
     <xs:enumeration value="verythinmathspace"/>
     <xs:enumeration value="thinmathspace"/>
     <xs:enumeration value="mediummathspace"/>
     <xs:enumeration value="thickmathspace"/>
     <xs:enumeration value="verythickmathspace"/>
     <xs:enumeration value="veryverythickmathspace"/>
   </xs:restriction>
</xs:simpleType>

<!-- Thickness -->

<xs:simpleType name="thickness">
  <xs:restriction base="xs:string">
    <xs:enumeration value="thin"/>
    <xs:enumeration value="medium"/>
    <xs:enumeration value="thick"/>
  </xs:restriction>
</xs:simpleType>


<!-- number with units used to specified lengths -->

<xs:simpleType name="length-with-unit">
  <xs:restriction base="xs:string">
<!--    <xs:pattern 
     value="(-?([0-9]+|[0-9]*\.[0-9]+)*(em|ex|px|in|cm|mm|pt|pc|%))|0"/> -->
     <xs:pattern 
      value="(-?([0-9]+|[0-9]*\.[0-9]+) *(em|ex|px|in|cm|mm|pt|pc|%))|0"/> <!-- SMP bug fix: * should apply to space -->
   </xs:restriction>
</xs:simpleType>

<xs:simpleType name="length-with-optional-unit">
  <xs:restriction base="xs:string">
<!--     <xs:pattern 
        value="-?([0-9]+|[0-9]*\.[0-9]+)*(em|ex|px|in|cm|mm|pt|pc|%)?"/> -->
    <xs:pattern 
      value="-?([0-9]+|[0-9]*\.[0-9]+) *(em|ex|px|in|cm|mm|pt|pc|%)?"/> <!-- SMP bug fix: * should apply to space -->
   </xs:restriction>
</xs:simpleType>

<!-- This is just "infinity" that can be used as a length -->

<xs:simpleType name="infinity">
  <xs:restriction base="xs:string">
    <xs:enumeration value="infinity"/>
  </xs:restriction>
</xs:simpleType>

<!-- colors defined as RGB -->

<xs:simpleType name="RGB-color">
  <xs:restriction base="xs:string">
    <xs:pattern value="#(([0-9]|[a-f]){3}|([0-9]|[a-f]){6})"/>
  </xs:restriction>
</xs:simpleType>


<!-- <xs:include schemaLocation="presentation/common-attribs.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This schema module defines sets of attributes common to several elements
  of presentation MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- The mathematics style attributes. These attributes are valid on all
     presentation token elements except "mspace" and "mglyph", and on no
     other elements except "mstyle".
-->

<xs:attributeGroup name="Token-style.attrib">
   <xs:attribute name="mathvariant"> <!-- SMP TEST -->
     <xs:simpleType>
       <xs:restriction base="xs:string">
           <xs:enumeration value="normal"/>
           <xs:enumeration value="bold"/>
           <xs:enumeration value="italic"/>
           <xs:enumeration value="bold-italic"/>
           <xs:enumeration value="double-struck"/>
           <xs:enumeration value="bold-fraktur"/>
           <xs:enumeration value="script"/>
           <xs:enumeration value="bold-script"/>
           <xs:enumeration value="fraktur"/>
           <xs:enumeration value="sans-serif"/>
           <xs:enumeration value="bold-sans-serif"/>
           <xs:enumeration value="sans-serif-italic"/>
           <xs:enumeration value="sans-serif-bold-italic"/>
           <xs:enumeration value="monospace"/>
       </xs:restriction>
     </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="mathsize"> <!-- SMP TEST -->
     <xs:simpleType>
       <xs:union memberTypes="simple-size length-with-unit"/>
     </xs:simpleType>
   </xs:attribute>
   <!-- For both of the following attributes the types should be
        more restricted -->
   <!-- Variant 04
   <xs:attribute name="mathcolor" type="xs:string"/>
   <xs:attribute name="mathbackground" type="xs:string"/>
	-->
    <xs:attribute name="mathcolor" type="domain-knowledge-color"/> <!-- SMP TEST -->
    <xs:attribute name="mathbackground" type="domain-knowledge-color"/> <!-- SMP TEST -->
</xs:attributeGroup>

<!-- Variant 04 -->
<xs:simpleType name="domain-knowledge-color">
	<xs:union memberTypes="RGB-color domain-knowledge-named-colors"/>
</xs:simpleType>
<xs:simpleType name="domain-knowledge-named-colors">
    <xs:restriction base="xs:string">
      <xs:enumeration value="red"/>
      <xs:enumeration value="blue"/>
      <xs:enumeration value="black"/>
      <xs:enumeration value="white"/>
      <xs:enumeration value="green"/>
      <xs:enumeration value="magenta"/>
      <xs:enumeration value="yellow"/>
      <xs:enumeration value="cyan"/>
    </xs:restriction>
</xs:simpleType>
<!-- -->
	
<!-- These operators are all related to operators. They are valid on "mo" and "mstyle". -->

<xs:attributeGroup name="Operator.attrib">
   <!-- this attribute value is normally inferred from the position of
    the operator in its "<mrow"> -->
   <xs:attribute name="form"> <!-- SMP TEST -->
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="prefix"/>
          <xs:enumeration value="infix"/>
          <xs:enumeration value="postfix"/>
        </xs:restriction>
      </xs:simpleType>
   </xs:attribute>
   <!-- set by dictionnary, else it is "thickmathspace" -->
   <xs:attribute name="lspace">  <!-- SMP TEST -->
      <xs:simpleType>
         <xs:union memberTypes="length-with-unit named-space"/>
      </xs:simpleType>
   </xs:attribute>    
   <!-- set by dictionnary, else it is "thickmathspace" -->
   <xs:attribute name="rspace">  <!-- SMP TEST -->
      <xs:simpleType>
         <xs:union memberTypes="length-with-unit named-space"/>
      </xs:simpleType>
   </xs:attribute>
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="fence" type="xs:boolean"/>  <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="separator" type="xs:boolean"/>  <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="stretchy" type="xs:boolean"/>  <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "true" -->
   <xs:attribute name="symmetric" type="xs:boolean"/>   <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="movablelimits" type="xs:boolean"/>  <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="accent" type="xs:boolean"/> <!-- SMP TEST -->
   <!-- set by dictionnary, else it is "false" -->
   <xs:attribute name="largeop" type="xs:boolean"/> <!-- SMP TEST -->
   <xs:attribute name="minsize">  <!-- SMP TEST -->
      <xs:simpleType>
         <xs:union memberTypes="length-with-unit named-space"/>
      </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="maxsize"> <!-- SMP TEST -->
      <xs:simpleType>
         <xs:union memberTypes="length-with-unit named-space infinity xs:float"/>
      </xs:simpleType>
   </xs:attribute>
</xs:attributeGroup>



<!-- <xs:include schemaLocation="presentation/characters.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML Schema module for the MathML "mglyph" element.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<xs:attributeGroup name="mglyph.attlist">
  <xs:attribute name="alt" type="xs:string"/> <!-- SMP TEST -->
  <!-- Variant 04 - domain knowledge of font family 
  <xs:attribute name="fontfamily" type="xs:string"/>
  -->
  <xs:attribute name="fontfamily" type="domain-knowledge-font-family"/> <!-- SMP TEST -->
  <xs:attribute name="index" type="xs:positiveInteger"/> <!-- SMP TEST -->
</xs:attributeGroup>

<!-- Variant 04 domain-knowledge -->
<xs:simpleType name="domain-knowledge-font-family">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Arial"/>
      <xs:enumeration value="Helvetica"/>
      <xs:enumeration value="Courier"/>
      <xs:enumeration value="Times"/>
    </xs:restriction>	
</xs:simpleType>
<!-- -->

<xs:complexType name="mglyph.type">
  <xs:attributeGroup ref="mglyph.attlist"/>
</xs:complexType>

<xs:element name="mglyph" type="mglyph.type"/> <!-- SMP TEST -->



<!-- <xs:include schemaLocation="presentation/tokens.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML schema module for the token elements of the 
  presentation part of MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- The content of presentation token elements is either normal characters, "mglyph" ones or alignment marks -->

<xs:group name="Glyph-alignmark.class">
    <xs:choice>
      <xs:element ref="malignmark"/>
      <xs:element ref="mglyph"/>
    </xs:choice>
</xs:group>

<!-- "mi" -->

<!-- "mi" is supposed to have a default value of its "mathvariant" attribute set to "italic" -->
<xs:attributeGroup name="mi.attlist">
   <xs:attributeGroup ref="Token-style.attrib"/>
   <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mi.type" mixed="true">
  <xs:group ref="Glyph-alignmark.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mi.attlist"/> 
</xs:complexType>

<xs:element name="mi" type="mi.type"/> <!-- SMP TEST -->

<!-- "mo" -->

<xs:attributeGroup name="mo.attlist">
   <xs:attributeGroup ref="Operator.attrib"/>
   <xs:attributeGroup ref="Token-style.attrib"/>
   <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mo.type" mixed="true">
  <xs:group ref="Glyph-alignmark.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mo.attlist"/> 
</xs:complexType>

<xs:element name="mo" type="mo.type"/> <!-- SMP TEST -->

<!-- "mn" -->

<xs:attributeGroup name="mn.attlist">
  <xs:attributeGroup ref="Token-style.attrib"/>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mn.type" mixed="true">
  <xs:group ref="Glyph-alignmark.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mn.attlist"/> 
</xs:complexType>

<xs:element name="mn" type="mn.type"/> <!-- SMP TEST -->

<!-- "mtext" -->

<xs:attributeGroup name="mtext.attlist">
  <xs:attributeGroup ref="Token-style.attrib"/>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mtext.type" mixed="true">
  <xs:group ref="Glyph-alignmark.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mtext.attlist"/> 
</xs:complexType>

<xs:element name="mtext" type="mtext.type"/> <!-- SMP TEST -->

<!-- "ms" -->

<xs:attributeGroup name="ms.attlist">
   <!-- the values of "lquote" or "rquote" are not restricted to be
        one character strings... -->
   <xs:attribute name="lquote" type="xs:string" default="&quot;"/>  <!-- SMP TEST -->
   <xs:attribute name="rquote" type="xs:string" default="&quot;"/>  <!-- SMP TEST -->
   <xs:attributeGroup ref="Token-style.attrib"/>
   <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="ms.type" mixed="true">
  <xs:group ref="Glyph-alignmark.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="ms.attlist"/> 
</xs:complexType>

<xs:element name="ms" type="ms.type"/>  <!-- SMP TEST -->

<!-- And the group of any token -->

<xs:group name="Presentation-token.class">
  <xs:choice> 
    <xs:element ref="mi"/>
    <xs:element ref="mo"/>
    <xs:element ref="mn"/>
    <xs:element ref="mtext"/>
    <xs:element ref="ms"/>
  </xs:choice>
</xs:group>



<!-- <xs:include schemaLocation="presentation/scripts.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is an XML Schema module for the presentation elements of MathML
  dealing with subscripts and superscripts.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- "msub" -->

<xs:attributeGroup name="msub.attlist">
<!-- SMP TEST DEBATABLE
   <xs:attribute name="subscriptshift" type="length-with-unit"/>
-->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="msub.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="msub.attlist"/>
</xs:complexType>

<xs:element name="msub" type="msub.type"/> <!-- SMP TEST -->

<!-- "msup" -->

<xs:attributeGroup name="msup.attlist">
  <xs:attribute name="superscriptshift" type="length-with-unit"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="msup.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="msup.attlist"/>
</xs:complexType>

<xs:element name="msup" type="msup.type"/> <!-- SMP TEST -->

<!-- "msubsup" -->

<xs:attributeGroup name="msubsup.attlist">
<!-- SMP TEST DEBATABLE
  <xs:attribute name="subscriptshift" type="length-with-unit"/>
-->
  <xs:attribute name="superscriptshift" type="length-with-unit"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="msubsup.type">
  <xs:group ref="Presentation-expr.class" minOccurs="3" maxOccurs="3"/>
  <xs:attributeGroup ref="msubsup.attlist"/>
</xs:complexType>

<xs:element name="msubsup" type="msubsup.type"/> <!-- SMP TEST -->

<!-- "munder" -->

<xs:attributeGroup name="munder.attlist">
  <xs:attribute name="accentunder" type="xs:boolean"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="munder.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="munder.attlist"/>
</xs:complexType>

<xs:element name="munder" type="munder.type"/> <!-- SMP TEST -->

<!-- "mover" -->

<xs:attributeGroup name="mover.attlist">
  <xs:attribute name="accent" type="xs:boolean"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mover.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="mover.attlist"/>
</xs:complexType>

<xs:element name="mover" type="mover.type"/> <!-- SMP TEST -->

<!-- "munderover" -->

<xs:attributeGroup name="munderover.attlist">
  <xs:attribute name="accent" type="xs:boolean"/> <!-- SMP TEST -->
<!-- SMP TEST DEBATABLE
  <xs:attribute name="accentunder" type="xs:boolean"/>
-->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="munderover.type">
  <xs:group ref="Presentation-expr.class" minOccurs="3" maxOccurs="3"/>
  <xs:attributeGroup ref="munderover.attlist"/>
</xs:complexType>

<xs:element name="munderover" type="munderover.type"/>  <!-- SMP TEST -->

<!-- "mmultiscripts", "mprescripts" and "none" -->

<xs:attributeGroup name="mmultiscripts.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="Presentation-expr-or-none.class">
  <xs:choice>
    <xs:group ref="Presentation-expr.class"/>
    <xs:element ref="none"/>
  </xs:choice>
</xs:group>

<!-- not used
<xs:group name="mprescripts.group">
  <xs:sequence>
     <xs:element ref="mprescripts"/>
     <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="Presentation-expr.class"/>
        <xs:element ref="none"/>
     </xs:choice>
  </xs:sequence>
</xs:group>
-->

<xs:group name="mmultiscripts.content">
  <xs:sequence>
    <xs:group ref="Presentation-expr.class"/>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="Presentation-expr-or-none.class"/>
      <xs:group ref="Presentation-expr-or-none.class"/>
    </xs:sequence>
    <xs:sequence minOccurs="0">
      <xs:element ref="mprescripts"/>
      <xs:sequence maxOccurs="unbounded">
        <xs:group ref="Presentation-expr-or-none.class"/>
        <xs:group ref="Presentation-expr-or-none.class"/>
      </xs:sequence>
    </xs:sequence>
  </xs:sequence>
</xs:group>

<xs:complexType name="mmultiscripts.type">
  <xs:group ref="mmultiscripts.content"/>
  <xs:attributeGroup ref="mmultiscripts.attlist"/>
</xs:complexType>

<xs:element name="mmultiscripts" type="mmultiscripts.type"/> <!-- SMP TEST -->

<!-- Nothing... -->
<xs:complexType name="none.type">
</xs:complexType>

<xs:element name="none" type="none.type"/> <!-- SMP TEST -->

<!-- also void -->
<xs:complexType name="mprescripts.type">
</xs:complexType>

<xs:element name="mprescripts" type="mprescripts.type"/> <!-- SMP TEST -->

<!-- And the group of everything -->

<xs:group name="Presentation-script.class">
  <xs:choice>
    <xs:element ref="msub"/>
    <xs:element ref="msup"/>
    <xs:element ref="msubsup"/>
    <xs:element ref="munder"/>
    <xs:element ref="mover"/>
    <xs:element ref="munderover"/>
    <xs:element ref="mmultiscripts"/>
  </xs:choice>
</xs:group>



<!-- <xs:include schemaLocation="presentation/space.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML Schema module for the MathML "mspace" element.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<xs:attributeGroup name="mspace.attlist">
  <xs:attribute name="width" default="0em"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:union memberTypes="length-with-unit named-space"/>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="height" type="length-with-unit" default="0ex"/> <!-- SMP TEST -->
  <xs:attribute name="depth" type="length-with-unit" default="0ex"/> <!-- SMP TEST -->
  <xs:attribute name="linebreak" default="auto"> <!-- SMP TEST --> 
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="auto"/>
        <xs:enumeration value="newline"/>
        <xs:enumeration value="indentingnewline"/>
        <xs:enumeration value="nobreak"/>
        <xs:enumeration value="goodbreak"/>
        <xs:enumeration value="badbreak"/>
     </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mspace.type">
  <xs:attributeGroup ref="mspace.attlist"/>
</xs:complexType>

<xs:element name="mspace" type="mspace.type"/> <!-- SMP TEST -->



<!-- <xs:include schemaLocation="presentation/layout.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML schema module for the layout elements of the 
  presentation part of MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- "mrow" -->

<xs:attributeGroup name="mrow.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mrow.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mrow.attlist"/>
</xs:complexType>

<xs:element name="mrow" type="mrow.type"/> <!-- SMP TEST -->

<!-- "mfrac" -->

<xs:attributeGroup name="mfrac.attlist">
  <xs:attribute name="bevelled" type="xs:boolean"/> <!-- SMP TEST -->
<!-- SMP TEST DEBATABLE
  <xs:attribute name="denomalign" type="centering" default="center"/>
-->
<!-- SMP TEST DEBATABLE
  <xs:attribute name="numalign" type="centering" default="center"/>
-->
  <xs:attribute name="linethickness" default="1"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:union memberTypes="length-with-optional-unit thickness"/>
    </xs:simpleType> 
  </xs:attribute>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mfrac.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="mfrac.attlist"/>
</xs:complexType>

<xs:element name="mfrac" type="mfrac.type"/> <!-- SMP TEST -->

<!-- "msqrt" -->

<xs:attributeGroup name="msqrt.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<!-- "msqrt" has an "inferred mrow" if more than one argument -->
<xs:complexType name="msqrt.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="msqrt.attlist"/>  
</xs:complexType>

<xs:element name="msqrt" type="msqrt.type"/> <!-- SMP TEST -->

<!-- "mroot" -->

<xs:attributeGroup name="mroot.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mroot.type">
  <xs:group ref="Presentation-expr.class" minOccurs="2" maxOccurs="2"/>
  <xs:attributeGroup ref="mroot.attlist"/>
</xs:complexType>

<xs:element name="mroot" type="mroot.type"/> <!-- SMP TEST -->

<!-- "mpadded" -->

<xs:simpleType name="mpadded-space">
  <xs:restriction base="xs:string">
    <xs:pattern
value="(\+|-)?([0-9]+|[0-9]*\.[0-9]+)(((%?) *(width|lspace|height|depth))|(em|ex|px|in|cm|mm|pt|pc))"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="mpadded-width-space">
  <xs:restriction base="xs:string">
    <!-- MaxF: definition from spec seems wrong, fixing to ([+|-] unsigned-number (%[pseudo-unit]|pseudo-unit|h-unit)) | namedspace | 0 -->
    <xs:pattern value="((\+|-)?([0-9]+|[0-9]*\.[0-9]+)(((%?) *(width|lspace|height|depth)?)|(width|lspace|height|depth)|(em|ex|px|in|cm|mm|pt|pc)))|((veryverythin|verythin|thin|medium|thick|verythick|veryverythick)mathspace)|0"/>
  </xs:restriction>
</xs:simpleType>

<xs:attributeGroup name="mpadded.attlist">
  <xs:attribute name="width" type="mpadded-width-space"/> <!-- SMP TEST -->
  <!-- should have default=0 below but '0' is not in value space -->
  <!-- see bug #425 -->
  <xs:attribute name="lspace" type="mpadded-space"/> <!-- SMP TEST -->
  <xs:attribute name="height" type="mpadded-space"/> <!-- SMP TEST -->
  <xs:attribute name="depth" type="mpadded-space"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mpadded.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mpadded.attlist"/>
</xs:complexType>

<xs:element name="mpadded" type="mpadded.type"/> <!-- SMP TEST -->

<!-- "mphantom" -->

<xs:attributeGroup name="mphantom.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mphantom.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mphantom.attlist"/>
</xs:complexType>

<xs:element name="mphantom" type="mphantom.type"/> <!-- SMP TEST -->

<!-- "mfenced" -->

<xs:attributeGroup name="mfenced.attlist">
  <xs:attribute name="open" type="xs:string" default="("/> <!-- SMP TEST -->
  <xs:attribute name="close" type="xs:string" default=")"/> <!-- SMP TEST -->
  <xs:attribute name="separators" type="xs:string" default=","/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="mfenced.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mfenced.attlist"/>
</xs:complexType>

<xs:element name="mfenced" type="mfenced.type"/> <!-- SMP TEST -->

<!-- "menclose" -->

<xs:attributeGroup name="menclose.attlist">
  <xs:attribute name="notation" default="longdiv"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="actuarial"/>
        <xs:enumeration value="longdiv"/>
        <xs:enumeration value="radical"/>
        <xs:enumeration value="box"/>
        <xs:enumeration value="roundedbox"/>
        <xs:enumeration value="circle"/>
        <xs:enumeration value="left"/>
        <xs:enumeration value="right"/>
        <xs:enumeration value="top"/>
        <xs:enumeration value="bottom"/>
        <xs:enumeration value="updiagonalstrike"/>
        <xs:enumeration value="downdiagonalstrike"/>
        <xs:enumeration value="verticalstrike"/>
        <xs:enumeration value="horizontalstrike"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="menclose.type">
  <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="menclose.attlist"/>
</xs:complexType>

<xs:element name="menclose" type="menclose.type"/> <!-- SMP TEST -->

<!-- And the group of everything -->

<xs:group name="Presentation-layout.class">
  <xs:choice> 
    <xs:element ref="mrow"/>
    <xs:element ref="mfrac"/>
    <xs:element ref="msqrt"/>
    <xs:element ref="mroot"/>
    <xs:element ref="mpadded"/>
    <xs:element ref="mphantom"/>
    <xs:element ref="mfenced"/>
    <xs:element ref="menclose"/>
  </xs:choice>
</xs:group>



<!-- <xs:include schemaLocation="presentation/table.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is an XML Schema module for tables in MathML presentation.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- Common attributes -->

<xs:attributeGroup name="Table-alignment.attrib">
  <xs:attribute name="rowalign" default="baseline"> <!-- SMP TEST -->
    <xs:simpleType> 
      <xs:restriction base="xs:string">
        <xs:pattern value="(top|bottom|center|baseline|axis)( top| bottom| center| baseline| axis)*"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="columnalign" default="center"> <!-- SMP TEST -->
    <xs:simpleType> 
      <xs:restriction base="xs:string">
        <xs:pattern value="(left|center|right)( left| center| right)*"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="groupalign" type="xs:string"/> <!-- SMP TEST -->
</xs:attributeGroup>

<!-- "mtr" -->

<xs:attributeGroup name="mtr.attlist">
  <xs:attributeGroup ref="Table-alignment.attrib"/>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="mtr.content">
  <xs:sequence>
    <xs:element ref="mtd"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="mtr.type">
  <xs:group ref="mtr.content"  minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mtr.attlist"/>
</xs:complexType>

<xs:element name="mtr" type="mtr.type"/> <!-- SMP TEST -->

<!-- "labeledtr" -->

<xs:attributeGroup name="mlabeledtr.attlist">
  <xs:attributeGroup ref="Table-alignment.attrib"/>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="mlabeledtr.content">
  <xs:sequence>
    <xs:element ref="mtd"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="mlabeledtr.type">
  <xs:group ref="mlabeledtr.content" minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mlabeledtr.attlist"/>
</xs:complexType>

<xs:element name="mlabeledtr" type="mlabeledtr.type"/> <!-- SMP TEST -->

<!-- "mtd" -->

<xs:attributeGroup name="mtd.attlist">
  <xs:attributeGroup ref="Table-alignment.attrib"/>
<!-- SMP TEST DEBATABLE
  <xs:attribute name="columnspan" type="xs:positiveInteger" default="1"/>
-->
  <xs:attribute name="rowspan" type="xs:positiveInteger" default="1"/> <!-- SMP TEST -->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="mtd.content">
  <xs:sequence>
    <xs:group ref="Presentation-expr.class" minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="mtd.type">
  <xs:group ref="mtd.content"  minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mtd.attlist"/>
</xs:complexType>

<xs:element name="mtd" type="mtd.type"/> <!-- SMP TEST -->

<!-- "mtable" -->

<xs:attributeGroup name="mtable.attlist">
  <xs:attributeGroup ref="Table-alignment.attrib"/>
  <xs:attribute name="align" type="xs:string" default="axis"/> <!-- SMP TEST -->
  <!-- SMP TEST DEBATABLE
  <xs:attribute name="alignmentscope" default="true">
   <xs:simpleType>
      <xs:restriction base="xs:string">
         <xs:pattern value="(true|false)( true| false)*"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  -->
<!-- Variant 04
  <xs:attribute name="columnwidth" type="xs:string" default="auto"/>
  <xs:attribute name="width" type="xs:string" default="auto"/>
-->
  <xs:attribute name="columnwidth" type="domain-knowledge-length-with-unit-or-auto" default="auto"/> <!-- SMP TEST -->
  <xs:attribute name="width" type="domain-knowledge-length-with-unit-or-auto" default="auto"/> <!-- SMP TEST -->
<!-- Variant 04
  <xs:attribute name="rowspacing" type="xs:string" default="1.0ex"/>
  <xs:attribute name="columnspacing" type="xs:string" default="0.8em"/>
-->
<xs:attribute name="rowspacing" type="length-with-unit" default="1.0ex"/> <!-- SMP TEST -->
<xs:attribute name="columnspacing" type="length-with-unit" default="0.8em"/> <!-- SMP TEST -->
  <xs:attribute name="rowlines" type="xs:string" default="none"/> <!-- SMP TEST -->
  <xs:attribute name="columnlines" type="xs:string" default="none"/> <!-- SMP TEST -->
  <xs:attribute name="frame" default="none"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:restriction base="xs:string">
         <xs:enumeration value="none"/>
         <xs:enumeration value="solid"/>
         <xs:enumeration value="dashed"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="framespacing" type="xs:string" default="0.4em 0.5ex"/> <!-- SMP TEST -->
  <xs:attribute name="equalrows" type="xs:boolean" default="false"/> <!-- SMP TEST -->
  <xs:attribute name="equalcolumns" type="xs:boolean" default="false"/> <!-- SMP TEST -->
  <xs:attribute name="displaystyle" type="xs:boolean" default="false"/> <!-- SMP TEST -->
  <xs:attribute name="side" default="right"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:restriction base="xs:string">
         <xs:enumeration value="left"/>
         <xs:enumeration value="right"/>
         <xs:enumeration value="leftoverlap"/>
         <xs:enumeration value="rightoverlap"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
<!-- SMP DEBATABLE
  <xs:attribute name="minlabelspacing" type="length-with-unit" default="0.8em"/>
-->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<!-- Variant 04 -->
<xs:simpleType name="domain-knowledge-length-with-unit-or-auto">
	<xs:union memberTypes="length-with-unit domain-knowledge-auto"/>
</xs:simpleType>
<xs:simpleType name="domain-knowledge-auto">
    <xs:restriction base="xs:string">
      <xs:enumeration value="auto"/>
    </xs:restriction>
</xs:simpleType>
<!-- -->


<xs:group name="mtable.content">
  <xs:choice>
    <xs:element ref="mtr"/>
    <xs:element ref="mlabeledtr"/>
  </xs:choice>
</xs:group>

<xs:complexType name="mtable.type">
  <xs:group ref="mtable.content"  minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mtable.attlist"/>
</xs:complexType>

<xs:element name="mtable" type="mtable.type"/> <!-- SMP TEST -->

<!-- "maligngroup" -->

<xs:attributeGroup name="maligngroup.attlist">
<!-- SMP DEBATABLE
  <xs:attribute name="groupalign">
     <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="left"/>
          <xs:enumeration value="center"/>
          <xs:enumeration value="right"/>
          <xs:enumeration value="decimalpoint"/>
      </xs:restriction>
     </xs:simpleType>    
  </xs:attribute>
-->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="maligngroup.type">
  <xs:attributeGroup ref="maligngroup.attlist"/>
</xs:complexType>

<xs:element name="maligngroup" type="maligngroup.type"/> <!-- SMP TEST -->

<!-- "malignmark" -->

<xs:attributeGroup name="malignmark.attlist">
  <xs:attribute name="edge" default="left"> <!-- SMP TEST -->
     <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="left"/>
          <xs:enumeration value="right"/>
        </xs:restriction>
     </xs:simpleType>
  </xs:attribute>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:complexType name="malignmark.type">
  <xs:attributeGroup ref="malignmark.attlist"/>
</xs:complexType>

<xs:element name="malignmark" type="malignmark.type"/> <!-- SMP TEST -->

<!-- The group of everything -->

<xs:group name="Presentation-table.class">
  <xs:choice>
     <xs:element ref="mtable"/>
     <xs:element ref="maligngroup"/>
     <xs:element ref="malignmark"/>
  </xs:choice>  
</xs:group>



<!-- <xs:include schemaLocation="presentation/style.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is an XML Schema for the "mstyle" element of MathML.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- "mstyle" -->

<xs:attributeGroup name="mstyle.attlist">
  <xs:attribute name="scriptlevel" type="xs:integer"/> <!-- SMP TEST -->
  <xs:attribute name="displaystyle" type="xs:boolean"/> <!-- SMP TEST -->
  <!-- SMP TEST DEBATABLE
  <xs:attribute name="scriptsizemultiplier" type="xs:decimal" default="0.71"/>
  -->
  <xs:attribute name="scriptminsize" type="length-with-unit" default="8pt"/> <!-- SMP TEST -->
  <xs:attribute name="color" type="xs:string"/> <!-- SMP TEST -->
  <xs:attribute name="background" type="xs:string" default="transparent"/> <!-- SMP TEST -->
  <!-- SMP TEST DEBATABLE
  <xs:attribute name="veryverythinmathspace" type="length-with-unit"
                default="0.0555556em"/>
  <xs:attribute name="verythinmathspace" type="length-with-unit"
                default="0.111111em"/>
  <xs:attribute name="thinmathspace" type="length-with-unit"
                default="0.166667em"/>
  <xs:attribute name="mediummathspace" type="length-with-unit"
                default="0.222222em"/>
  <xs:attribute name="thickmathspace" type="length-with-unit"
                default="0.277778em"/>
  <xs:attribute name="verythickmathspace" type="length-with-unit"
                default="0.333333em"/>
  <xs:attribute name="veryverythickmathspace" type="length-with-unit"
                default="0.388889em"/>
  -->
  <xs:attribute name="linethickness" default="1"> <!-- SMP TEST -->
    <xs:simpleType>
      <xs:union memberTypes="length-with-optional-unit thickness"/>
    </xs:simpleType> 
  </xs:attribute>
  <xs:attributeGroup ref="Operator.attrib"/>
  <xs:attributeGroup ref="Token-style.attrib"/>
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="mstyle.content">
  <xs:sequence>
    <xs:group ref="Presentation-expr.class"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="mstyle.type">
  <xs:group ref="mstyle.content" minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="mstyle.attlist"/>
</xs:complexType>

<xs:element name="mstyle" type="mstyle.type"/> <!-- SMP TEST -->



<!-- <xs:include schemaLocation="presentation/error.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML Schema module for the MathML "merror" element.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<!-- SMP TEST
<xs:attributeGroup name="merror.attlist">
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="merror.content">
  <xs:sequence>
    <xs:group ref="Presentation-expr.class"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="merror.type">
  <xs:group ref="merror.content" minOccurs="0" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="merror.attlist"/>
</xs:complexType>

<xs:element name="merror" type="merror.type"/>
-->

<!-- <xs:include schemaLocation="presentation/action.xsd"/> -->

<xs:annotation>
  <xs:documentation>
  This is the XML Schema module for the MathML "maction" element.
  Author: St&#233;phane Dalmas, INRIA.
  </xs:documentation>
</xs:annotation>

<xs:attributeGroup name="maction.attlist">
  <xs:attribute name="actiontype" type="xs:string" use="required"/> <!-- SMP TEST -->
<!-- SMP TEST DEBATABLE  
  <xs:attribute name="selection"  type="xs:positiveInteger" default="1"/>
-->
  <xs:attributeGroup ref="Common.attrib"/>
</xs:attributeGroup>

<xs:group name="maction.content">
  <xs:sequence>
    <xs:group ref="Presentation-expr.class"/>
  </xs:sequence>
</xs:group>

<xs:complexType name="maction.type">
  <xs:group ref="maction.content" minOccurs="1" maxOccurs="unbounded"/>
  <xs:attributeGroup ref="maction.attlist"/>
</xs:complexType>

<xs:element name="maction" type="maction.type"/> <!-- SMP TEST -->




<!-- Content -->
<!-- SMP
<xs:include schemaLocation="content/common-attrib.xsd"/>
<xs:include schemaLocation="content/tokens.xsd"/>
<xs:include schemaLocation="content/arith.xsd"/>
<xs:include schemaLocation="content/functions.xsd"/>
<xs:include schemaLocation="content/logic.xsd"/>
<xs:include schemaLocation="content/constructs.xsd"/>
<xs:include schemaLocation="content/constants.xsd"/>
<xs:include schemaLocation="content/elementary-functions.xsd"/>
<xs:include schemaLocation="content/relations.xsd"/>
<xs:include schemaLocation="content/semantics.xsd"/>
<xs:include schemaLocation="content/sets.xsd"/>
<xs:include schemaLocation="content/linear-algebra.xsd"/>
<xs:include schemaLocation="content/calculus.xsd"/>
<xs:include schemaLocation="content/vector-calculus.xsd"/>
<xs:include schemaLocation="content/statistics.xsd"/>
-->

</xs:schema>
<!--
  Copyright &#251; 2002 World Wide Web Consortium, (Massachusetts Institute
  of Technology, Institut National de Recherche en Informatique et en
  Automatique, Keio University). All Rights Reserved. See
  http://www.w3.org/Consortium/Legal/.
  -->
